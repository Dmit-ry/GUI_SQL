import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3

# Predefined SQL queries with placeholders for parameters
predefined_queries = {
    "Select All from Table": "SELECT * FROM {table};",
    "Select by ID": "SELECT * FROM {table} WHERE id = {id};",
    "Insert into Table": "INSERT INTO {table} (column1, column2) VALUES ({value1}, {value2});"
}

# Function to run SQL queries
def run_query(query):
    try:
        conn = sqlite3.connect('example.db')  # Connect to the database
        cursor = conn.cursor()
        cursor.execute(query)
        if query.lower().startswith("select"):
            results = cursor.fetchall()
            display_results(results)
        else:
            conn.commit()
            messagebox.showinfo("Success", "Query executed successfully")
        cursor.close()
        conn.close()
    except Exception as e:
        messagebox.showerror("Error", str(e))

# Function to display results
def display_results(results):
    result_text.delete(1.0, tk.END)  # Clear previous results
    for row in results:
        result_text.insert(tk.END, str(row) + '\n')

# Function to get the query from the dropdown and insert parameters
def get_predefined_query():
    selected_query = query_var.get()
    query_template = predefined_queries[selected_query]
    query = query_template.format(
        table=table_entry.get(),
        id=id_entry.get(),
        value1=value1_entry.get(),
        value2=value2_entry.get()
    )
    query_entry.delete(1.0, tk.END)
    query_entry.insert(tk.END, query)

# Create the main window
root = tk.Tk()
root.title("SQL Query Runner")

# Create a frame for the query input
query_frame = ttk.Frame(root, padding="10")
query_frame.grid(row=0, column=0, sticky="ew")

# Create and place the predefined query dropdown
ttk.Label(query_frame, text="Choose a predefined query:").grid(row=0, column=0, sticky="w")
query_var = tk.StringVar()
query_dropdown = ttk.Combobox(query_frame, textvariable=query_var, state="readonly")
query_dropdown['values'] = list(predefined_queries.keys())
query_dropdown.grid(row=0, column=1, sticky="ew")

# Create and place parameter entry widgets
ttk.Label(query_frame, text="Table:").grid(row=1, column=0, sticky="w")
table_entry = ttk.Entry(query_frame)
table_entry.grid(row=1, column=1, sticky="ew")

ttk.Label(query_frame, text="ID:").grid(row=2, column=0, sticky="w")
id_entry = ttk.Entry(query_frame)
id_entry.grid(row=2, column=1, sticky="ew")

ttk.Label(query_frame, text="Value1:").grid(row=3, column=0, sticky="w")
value1_entry = ttk.Entry(query_frame)
value1_entry.grid(row=3, column=1, sticky="ew")

ttk.Label(query_frame, text="Value2:").grid(row=4, column=0, sticky="w")
value2_entry = ttk.Entry(query_frame)
value2_entry.grid(row=4, column=1, sticky="ew")

# Button to generate query from predefined template
generate_button = ttk.Button(query_frame, text="Generate Query", command=get_predefined_query)
generate_button.grid(row=5, column=0, columnspan=2)

# Create and place the query input widgets
ttk.Label(query_frame, text="Or enter your SQL query:").grid(row=6, column=0, columnspan=2, sticky="w")
query_entry = tk.Text(query_frame, height=5, width=50)
query_entry.grid(row=7, column=0, columnspan=2, sticky="ew")

# Create a frame for the results
result_frame = ttk.Frame(root, padding="10")
result_frame.grid(row=1, column=0, sticky="nsew")

# Create and place the results output widget
result_text = tk.Text(result_frame, height=15, width=50)
result_text.grid(row=0, column=0, sticky="nsew")

# Create a button to run the query
run_button = ttk.Button(query_frame, text="Run Query", command=lambda: run_query(query_entry.get("1.0", tk.END).strip()))
run_button.grid(row=8, column=0, columnspan=2)

# Configure row and column weights for resizing
root.grid_rowconfigure(1, weight=1)
root.grid_columnconfigure(0, weight=1)
result_frame.grid_rowconfigure(0, weight=1)
result_frame.grid_columnconfigure(0, weight=1)

# Run the Tkinter event loop
root.mainloop()
